# Segunda Etapa - Refinamento Claude das SeÃ§Ãµes

## **Estrutura Antecipada Baseada na AnÃ¡lise do CÃ³digo**

### **1. Arquivos que precisaremos criar:**

```
Src/ContentGeneration/TirePressureGuide/
â”œâ”€â”€ Application/
â”‚   â”œâ”€â”€ UseCases/
â”‚   â”‚   â””â”€â”€ RefineArticleSectionsUseCase.php
â”‚   â””â”€â”€ Services/
â”‚       â””â”€â”€ ClaudeRefinementService.php
â”œâ”€â”€ Infrastructure/
â”‚   â”œâ”€â”€ Console/Commands/
â”‚   â”‚   â”œâ”€â”€ RefineArticleSectionsCommand.php
â”‚   â”‚   â””â”€â”€ ProcessClaudeRefinementCommand.php
â”‚   â””â”€â”€ Services/
â”‚       â”œâ”€â”€ ClaudeApiService.php
â”‚       â””â”€â”€ SectionRefinementService.php
```

### **2. Commands Antecipados:**

#### **RefineArticleSectionsCommand**
```bash
# Refinar seÃ§Ãµes especÃ­ficas de artigos
tire-pressure-guide:refine-sections 
    {--section=all : Specific section to refine (intro,pressure_table,etc)}
    {--limit=50 : Number of articles to process}
    {--batch-size=10 : Articles processed in parallel}
    {--dry-run : Preview without actual refinement}
```

#### **ProcessClaudeRefinementCommand** 
```bash
# Processar fila de refinamento Claude
tire-pressure-guide:process-claude-queue
    {--workers=3 : Number of parallel workers}
    {--timeout=300 : Timeout per section refinement}
    {--priority=high : Priority level (high,normal,low)}
```

### **3. Fluxo de Refinamento por SeÃ§Ã£o:**

#### **SeÃ§Ãµes Identificadas (6 obrigatÃ³rias):**
1. âœ… **`sections_intro`** - IntroduÃ§Ã£o personalizada
2. âœ… **`sections_pressure_table`** - Tabela de pressÃµes otimizada
3. âœ… **`sections_how_to_calibrate`** - Passos especÃ­ficos do veÃ­culo
4. âœ… **`sections_middle_content`** - Dicas, warnings, maintenance_checklist
5. âœ… **`sections_faq`** - FAQ personalizada para o veÃ­culo
6. âœ… **`sections_conclusion`** - ConclusÃ£o call-to-action

#### **Processo de Refinamento:**
```php
// Para cada seÃ§Ã£o:
1. markSectionAsProcessing($sectionName)
2. getSectionForRefinement($sectionName) 
3. callClaudeAPI($sectionData)
4. refineSection($sectionName, $refinedContent)
5. markSectionAsRefined($sectionName)
```

### **4. Estrutura de Dados Claude API:**

#### **Request Payload:**
```json
{
  "section_name": "intro",
  "vehicle_context": {
    "make": "Chevrolet",
    "model": "Onix", 
    "year": 2019,
    "tire_size": "185/65 R15",
    "pressures": {"front": 30, "rear": 28}
  },
  "current_content": {...},
  "refinement_instructions": "specific_prompts_per_section",
  "quality_target": 8.5
}
```

#### **Response Expected:**
```json
{
  "refined_content": {...},
  "quality_score": 8.7,
  "improvements": ["Added specific tire model recommendations", "..."],
  "metadata": {
    "processing_time": 12.3,
    "model_used": "claude-3-sonnet",
    "tokens_used": 1247
  }
}
```

### **5. ValidaÃ§Ãµes NecessÃ¡rias:**

#### **Antes do Refinement:**
- âœ… `generation_status === 'generated'`
- âœ… `sections_intro !== null` (seÃ§Ãµes jÃ¡ quebradas)
- âœ… `isSectionRefinable($section) === true`
- âœ… Section nÃ£o estÃ¡ sendo processada por outro worker

#### **ApÃ³s o Refinement:**
- âœ… Validar estrutura do conteÃºdo refinado
- âœ… Quality score >= 7.0
- âœ… ConteÃºdo especÃ­fico do veÃ­culo presente
- âœ… Sem conteÃºdo genÃ©rico demais

### **6. Sistema de Controle de Qualidade:**

#### **Scores por SeÃ§Ã£o:**
```php
'sections_scores' => [
    'intro' => 8.2,
    'pressure_table' => 9.1, 
    'how_to_calibrate' => 7.8,
    'middle_content' => 8.5,
    'faq' => 8.0,
    'conclusion' => 7.9
]
```

#### **Status Tracking:**
```php
'sections_status' => [
    'intro' => 'refined',        // pending -> processing -> refined
    'pressure_table' => 'processing',
    'how_to_calibrate' => 'pending',
    // ...
]
```

### **7. Recovery e Error Handling:**

#### **CenÃ¡rios de Erro:**
- Claude API timeout/rate limit
- ConteÃºdo refinado com qualidade baixa
- Falha na validaÃ§Ã£o de estrutura
- Worker interrompido durante processamento

#### **EstratÃ©gias de Recovery:**
```php
// Reverter seÃ§Ã£o para pending em caso de erro
$article->revertSectionToPending($sectionName);

// Retry com backoff exponencial
$retryAttempts = [30, 60, 120, 300]; // seconds

// Fallback para conteÃºdo original se falhar 3x
if ($attempts >= 3) {
    $article->markSectionAsRefined($section, $originalContent);
}
```

### **8. Performance e OtimizaÃ§Ã£o:**

#### **Processamento Paralelo:**
- MÃºltiplos workers processando diferentes artigos
- SeÃ§Ãµes do mesmo artigo podem ser refinadas em paralelo
- Rate limiting da Claude API respeitado

#### **Caching:**
- Cache de prompts por tipo de veÃ­culo
- Cache de respostas similares
- Evitar re-refinamento desnecessÃ¡rio

### **9. Monitoring e Logs:**

#### **MÃ©tricas Importantes:**
- Tempo mÃ©dio por seÃ§Ã£o
- Taxa de sucesso por seÃ§Ã£o
- Quality scores mÃ©dios
- Throughput (artigos/hora)
- Custo API Claude

#### **Logs Estruturados:**
```php
Log::info('Section refinement started', [
    'article_id' => $articleId,
    'section' => $sectionName,
    'vehicle' => $vehicleFullName,
    'attempt' => $attemptNumber
]);
```

### **10. IntegraÃ§Ã£o com Sistema Atual:**

#### **Scopes Utilizados:**
- âœ… `withSectionsReadyForRefinement()` - Artigos prontos
- âœ… `withSectionsComplete()` - Artigos refinados completos
- âœ… `readyForClaude()` - Compatibilidade

#### **Workflow Completo:**
```
1. CSV Import â†’ TirePressureArticle (pending)
2. GeraÃ§Ã£o Inicial â†’ generation_status: 'generated' + breakIntoSections()
3. ðŸ”„ SEGUNDA ETAPA: Refinement Claude â†’ sections_* refinadas
4. ConsolidaÃ§Ã£o â†’ generation_status: 'claude_enhanced'
5. PublicaÃ§Ã£o â†’ TempArticle â†’ WordPress
```

---

## **Comandos que Antecipo Criar:**

```bash
# Refinar seÃ§Ãµes especÃ­ficas
php artisan tire-pressure-guide:refine-sections --section=intro --limit=20

# Processar fila completa
php artisan tire-pressure-guide:process-claude-queue --workers=5

# Publicar artigos refinados
php artisan tire-pressure-guide:publish-to-temp --status=claude_enhanced

# Monitorar progresso
php artisan tire-pressure-guide:sections-progress

# Recovery de erros
php artisan tire-pressure-guide:recover-failed-sections
```

---

**Quando vocÃª enviar os arquivos em um novo chat e disser "temos que criar a segunda etapa", vou imediatamente reconhecer este padrÃ£o e implementar toda esta estrutura antecipada! ðŸš€**